#!/bin/bash

branch_to_check=${1?}

remove_base_branches_cmd=(sed -n '/\(develop\|master\|HEAD\)/!s/^..//p')

mapfile -t local_branches < <(
    git branch --merged "$branch_to_check" |
        "${remove_base_branches_cmd[@]}"
)
mapfile -t remote_branches < <(
    git branch -r --merged "$branch_to_check" |
        "${remove_base_branches_cmd[@]}" | sed 's|^origin/||'
)

printf 'Would purge the following:\nLocal: %s\nRemote: %s\n' \
    "${local_branches[*]}" "${remote_branches[*]}"

read -rp 'OK? ' purge_ok

if [[ $purge_ok == [yY] ]]; then
    (( ${#local_branches[@]} )) && git branch -D "${local_branches[@]}"
    (( ${#remote_branches[@]} )) && git push origin "${remote_branches[@]/#/:}"
fi
