#!/bin/bash

shopt -s nullglob

# https://github.com/koalaman/shellcheck/issues/333
# shellcheck disable=SC1083
for in_filename in *.{JP{,E}G,jp{,e}g}; do
    datetime=$(
        # shellcheck disable=SC2016
        exiftool -p '$DateTimeOriginal' "$in_filename" | tr -d ':' | tr ' ' _
    )

    if ! [[ $datetime ]]; then
        printf '%s\n' "$in_filename" >&2
        continue
    fi

    orig_filename=IMG_$datetime.jpg
    orig_filename_seq=IMG_${datetime}_01.jpg
    out_filename=$orig_filename

    [[ $in_filename == "$orig_filename" ]] && continue

    if [[ -e $orig_filename ]] || [[ -e $orig_filename_seq ]]; then
        i=2
        last_filename=$orig_filename

        while true; do
            new_filename=${orig_filename%%.jpg}_$(printf '%02d' "$i").jpg

            printf 'Already exists: %s, trying %s (%s -> %s)\n' \
                "$last_filename" "$new_filename" \
                "$in_filename" "$last_filename" >&2

            if ! [[ -e $new_filename ]]; then
                out_filename=$new_filename

                if (( i == 2 )) && [[ -e $orig_filename ]] && ! [[ -e $orig_filename_seq ]]; then
                    # This is now a sequence, rename it so that it works nicely
                    # with lexicographic sort
                    printf '%s is now sequenced as #1\n' "$orig_filename"
                    mv -n -- "$orig_filename" "$orig_filename_seq"
                fi

                break
            elif [[ $new_filename == "$in_filename" ]]; then
                # We already renamed these ones, don't do it again. This avoids
                # getting _3 images when there are only two.
                continue 2
            else
                last_filename=$new_filename
                (( i++ ))
            fi
        done
    fi

    mv -n -- "$in_filename" "$out_filename"
done
