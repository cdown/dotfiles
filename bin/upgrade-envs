#!/bin/bash

set -e
set -x

exists() {
    command -v "$@" >/dev/null 2>&1
}

for cmd in nodenv pyenv rbenv plenv; do
    exists "$cmd" || continue
    eval "$("$cmd" init -)"
done

cd /

if exists pyenv; then
    # We might be doing it for another user as part of upgrade where we weren't
    # running ~/.profile or similar, and without this pyenv stuff will fail
    eval "$(pyenv init --path)"

    while read -r version; do
        export PYENV_VERSION="$version"
        if ! pyenv which python; then
            # Waiting to install this one...
            continue
        fi
        pip install -U pip
        pipdeptree | grep -P '^\w+' | awk -F= '{ print $1 }' |
            xargs -d '\n' pip install -U
    done < ~/.pyenv/version
fi

# This one is safe without checking for explicit dependencies >=2.6.1, see
# https://github.com/npm/npm/issues/6247
if exists npm; then
    npm install -g npm  # not upgraded by npm update
    npm update -g
fi

# TODO: Check safety of gem update
if exists gem; then gem update; fi

if exists cpanm; then cpan-outdated -p | cpanm -n; fi

if exists vagrant; then vagrant plugin update; fi

if exists rustup; then rustup self upgrade-data && rustup update stable; fi

# `cargo install-update` is an optional extension
if exists cargo && cargo install-update --help >/dev/null 2>&1; then cargo install-update -a; fi
