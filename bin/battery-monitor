#!/bin/bash

shopt -s nullglob

: "${WARN_PERC:=10}"
: "${SLEEP_PERC:=5}"
: "${XDG_RUNTIME_DIR:=/run/user/"$(id -u)"}"
: "${CACHE_DIR:="$XDG_RUNTIME_DIR"/battmon}"

sum() { cat "$@" | awk '{ sum += $0 } END { print sum }'; }
any_is_charging() {
    cat /sys/class/power_supply/BAT*/status | grep -q -e Charging -e Full
}
all_are_unknown() {
    # On the T470s, both batteries go to "unknown" when charged for some reason
    ! cat /sys/class/power_supply/BAT*/status | grep -q -v Unknown
}
any_battery_exists() {
    batteries=(/sys/class/power_supply/BAT*)
    (( "${#batteries[@]}" ))
}
write_last() {
    mkdir -p "$CACHE_DIR"
    printf '%s' "${1?}" > "$CACHE_DIR/last_global_state"
}
read_last() {
    cat "$CACHE_DIR/last_global_state" 2>/dev/null
}
check_and_update_last() {
    local last
    local current

    last=$(read_last)
    current=${1?}

    [[ $last == "$current" ]] || notify-send "Battery now $current"
    write_last "$current"
}

any_battery_exists || exit 0

last=$(read_last)

if any_is_charging || all_are_unknown; then
    check_and_update_last charging
else
    check_and_update_last discharging
fi

any_is_charging && exit 0

full=$(sum /sys/class/power_supply/BAT*/{charge,energy}_full)
now=$(sum /sys/class/power_supply/BAT*/{charge,energy}_now)
perc=$(( now * 100 / full ))

if (( perc <= WARN_PERC )); then
    notify-send -u critical 'Reaching critical battery threshold'
fi

if (( perc <= SLEEP_PERC )); then
    lock-sleep
fi
