#!/bin/bash

for arg do
    case $arg in
	--multi) multi=1 ;;
	--features) features=1 ;;
    esac
done

make_steps() {
# Unfortunately no anchors in GH Actions
cat << 'EOF'
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: swatinem/rust-cache@v2
EOF
}

make_runs_on() {
    if (( multi )); then
cat << 'EOF'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
EOF
    else
cat << 'EOF'
    runs-on: ubuntu-latest
EOF
    fi
}

make_job() {
cat << EOF
  ${1?}:
    name: ${2?}
EOF
    make_runs_on
    make_steps
}

make_run() {
cat << EOF
      - run: $*
EOF
}

printf 'jobs:\n'

make_job build Build
make_run cargo build
printf '\n'

make_job test Test
make_run cargo test
printf '\n'

make_job lint Lint
make_run cargo fmt --all -- --check
make_run cargo clippy -- -D warnings

if (( features )); then
    printf '\n'
    make_job build_nf 'Build (no features)'
    make_run cargo build --no-default-features
    printf '\n'

    make_job test_nf 'Test (no features)'
    make_run cargo test --no-default-features
    printf '\n'

    make_job lint_nf 'Lint (no features)'
    # cargo fmt is feature agnostic
    make_run cargo clippy --no-default-features -- -D warnings
fi

cat << 'EOF'

on:
  push:
  pull_request:
  workflow_dispatch:
EOF
