#!/bin/bash -ex

export LC_ALL=C

# Default setting of 21 determined by looking through GoPro videos with fine
# detail
#
# eg:
#
# for crf in {18..23}; do ffmpeg -ss 01:16 -y -i GH010018.MP4 -c:v libx265 -preset faster -tune grain -vf format=yuv420p -to 00:08 -crf "$crf" -acodec aac -b:a 192k shrink/GH010018_"$crf".MP4; done
# for file in shrink/*.MP4; do mpv "$file" --start=00:04 --frames=1 -o "$file".png; done
# du -sh *.MP4 -- after 21 it starts going exponential
#
# Other settings may help, but they increase file size quite a bit:
#
# -x265-params "no-sao:psy-rdoq=2.00:aq-mode=3"
#
# Or even mode
#
# -x265-params "no-sao:psy-rdoq=3.00:rdoq-level=1:psy-rd=2.00:aq-mode=3"
#
# For now -tune grain is disabled because it's just too big:
#
# 5.9M    GH010018_18_notune.MP4
# 9.6M    GH010018_18_tune.MP4
# 4.9M    GH010018_19_notune.MP4
# 8.3M    GH010018_19_tune.MP4
# 4.1M    GH010018_20_notune.MP4
# 6.9M    GH010018_20_tune.MP4
# 3.5M    GH010018_21_notune.MP4
# 5.8M    GH010018_21_tune.MP4
# 2.9M    GH010018_22_notune.MP4
# 5.0M    GH010018_22_tune.MP4
# 2.5M    GH010018_23_notune.MP4
# 4.2M    GH010018_23_tune.MP4
#
# For long GoPro encodes, consider PRESET=slow per
# https://ottverse.com/choosing-an-x265-preset-an-roi-analysis/

in=${1?}

in_filename=${in##*/}
in_ext=${in_filename##*.}
in_base=${in_filename%.*}

if (( X265 )); then
    default_container="mp4"
else
    default_container="mkv"
fi

if [[ -n "$2" ]]; then
    if [[ -d "$2" ]]; then
        out="$2/${in_base}.${default_container}"
    else
        out="$2"
    fi
else
    out="${in_base}_SHRINK.${default_container}"
fi

: "${MAX_DIMENSION:=0}"
: "${VIDEO_CRF:=21}"
: "${PRESET:=faster}"
: "${X265:=1}"

extra_vf=''
if (( MAX_DIMENSION )); then
    extra_vf=scale=w="$MAX_DIMENSION":h="$MAX_DIMENSION":force_original_aspect_ratio=decrease', '
fi

fps_filter=''
fps=$(ffmpeg -i "$in" 2>&1 | grep -oP '(\d+(?:\.\d+)?) fps' | head -1 | grep -oP '\d+(?:\.\d+)?')
if (( $(echo "$fps > 30" | bc -l) )); then
    fps_filter='fps=fps=30, '
fi

if (( X265 )); then
    nice -n 19 \
        ffmpeg -y -i "$in" -c:v libx265 \
            -preset "${PRESET}" \
            -vf "${fps_filter}${extra_vf}format=yuv420p" \
            -crf "$VIDEO_CRF" -acodec aac -b:a 192k "$out"
else
    nice -n 19 \
        ffmpeg -y -i "$in" -c:v libx264 -profile:v baseline \
            -preset "${PRESET}" \
            -vf "${fps_filter}${extra_vf}format=yuv420p" \
            -crf "$VIDEO_CRF" -acodec aac -b:a 192k "$out"
fi

if (( ANY_SIZE )); then
    exit 0
fi

in_sz=$(stat -c%s "$in")
out_sz=$(stat -c%s "$out")
intolerance=1048576

if (( out_sz > (in_sz - intolerance) )); then
    printf '%s is not a significant improvement, restoring %s\n' "$out" "$in" >&2
    cp -- "$in" "$out"
fi
